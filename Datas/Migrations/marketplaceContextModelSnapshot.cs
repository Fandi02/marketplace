// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using marketplace.Datas;

#nullable disable

namespace marketplace.Datas.Migrations
{
    [DbContext(typeof(marketplaceContext))]
    partial class marketplaceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("marketplace.Datas.Entities.Admin", b =>
                {
                    b.Property<int>("IdAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_admin");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nama");

                    b.Property<string>("NoHp")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("no_hp");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("username");

                    b.HasKey("IdAdmin")
                        .HasName("PRIMARY");

                    b.ToTable("admin", (string)null);
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Alamat", b =>
                {
                    b.Property<int>("IdAlamat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_alamat");

                    b.Property<string>("Desa")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("desa");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("deskripsi");

                    b.Property<int>("IdPembeli")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_pembeli");

                    b.Property<string>("Kecamatan")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("kecamatan");

                    b.Property<string>("KodePos")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("kode_pos");

                    b.Property<string>("Kota")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("kota");

                    b.Property<string>("Provinsi")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("provinsi");

                    b.HasKey("IdAlamat")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdPembeli" }, "id_pembeli");

                    b.ToTable("alamat", (string)null);
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Kategori", b =>
                {
                    b.Property<int>("IdKategori")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_kategori");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("deskripsi");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("icon");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nama");

                    b.HasKey("IdKategori")
                        .HasName("PRIMARY");

                    b.ToTable("kategori", (string)null);
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Keranjang", b =>
                {
                    b.Property<int>("IdKeranjang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_keranjang");

                    b.Property<int>("IdPembeli")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_pembeli");

                    b.Property<int>("IdProduk")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_produk");

                    b.Property<int>("JmlBarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("jml_barang");

                    b.Property<decimal>("SubTotal")
                        .HasPrecision(25, 2)
                        .HasColumnType("decimal(25,2)")
                        .HasColumnName("sub_total");

                    b.HasKey("IdKeranjang")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdPembeli" }, "id_pembeli")
                        .HasDatabaseName("id_pembeli1");

                    b.HasIndex(new[] { "IdProduk" }, "id_produk");

                    b.ToTable("keranjang", (string)null);
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_order");

                    b.Property<int>("IdAlamat")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_alamat");

                    b.Property<int>("IdKeranjang")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_keranjang");

                    b.Property<int>("IdPembeli")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_pembeli");

                    b.Property<int>("IdStatusOrder")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_status_order");

                    b.Property<decimal>("JmlBayar")
                        .HasPrecision(25)
                        .HasColumnType("decimal(25)")
                        .HasColumnName("jml_bayar");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("notes");

                    b.Property<DateOnly>("TglTransaksi")
                        .HasColumnType("date")
                        .HasColumnName("tgl_transaksi");

                    b.HasKey("IdOrder")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdAlamat" }, "id_alamat");

                    b.HasIndex(new[] { "IdKeranjang" }, "id_keranjang");

                    b.HasIndex(new[] { "IdPembeli" }, "id_pembeli")
                        .HasDatabaseName("id_pembeli2");

                    b.HasIndex(new[] { "IdStatusOrder" }, "id_status_order");

                    b.ToTable("order", (string)null);
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Pembayaran", b =>
                {
                    b.Property<int>("IdPembayaran")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_pembayaran");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_order");

                    b.Property<int>("IdPembeli")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_pembeli");

                    b.Property<decimal>("JmlBayar")
                        .HasPrecision(25)
                        .HasColumnType("decimal(25)")
                        .HasColumnName("jml_bayar");

                    b.Property<string>("MetodePembayaran")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("metode_pembayaran");

                    b.Property<decimal>("Pajak")
                        .HasPrecision(25)
                        .HasColumnType("decimal(25)")
                        .HasColumnName("pajak");

                    b.Property<DateOnly>("TglBayar")
                        .HasColumnType("date")
                        .HasColumnName("tgl_bayar");

                    b.Property<string>("Tujuan")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tujuan");

                    b.HasKey("IdPembayaran")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdOrder" }, "id_order");

                    b.HasIndex(new[] { "IdPembeli" }, "id_pembeli")
                        .HasDatabaseName("id_pembeli3");

                    b.ToTable("pembayaran", (string)null);
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Pembeli", b =>
                {
                    b.Property<int>("IdPembeli")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_pembeli");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("foto");

                    b.Property<string>("IsAdmin")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("is_admin");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nama");

                    b.Property<string>("NoHp")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("no_hp");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("username");

                    b.HasKey("IdPembeli")
                        .HasName("PRIMARY");

                    b.ToTable("pembeli", (string)null);
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Pengiriman", b =>
                {
                    b.Property<int>("IdPengiriman")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_pengiriman");

                    b.Property<int>("IdAlamat")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_alamat");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_order");

                    b.Property<int>("Kurir")
                        .HasColumnType("int(11)")
                        .HasColumnName("kurir");

                    b.Property<int>("Ongkir")
                        .HasColumnType("int(11)")
                        .HasColumnName("ongkir");

                    b.HasKey("IdPengiriman")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdAlamat" }, "id_alamat")
                        .HasDatabaseName("id_alamat1");

                    b.HasIndex(new[] { "IdOrder" }, "id_order")
                        .HasDatabaseName("id_order1");

                    b.ToTable("pengiriman", (string)null);
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Produk", b =>
                {
                    b.Property<int>("IdProduk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_produk");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("deskripsi");

                    b.Property<string>("Gambar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("gambar");

                    b.Property<decimal>("Harga")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("harga");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nama");

                    b.Property<int>("Stok")
                        .HasColumnType("int(4)")
                        .HasColumnName("stok");

                    b.HasKey("IdProduk")
                        .HasName("PRIMARY");

                    b.ToTable("produk", (string)null);
                });

            modelBuilder.Entity("marketplace.Datas.Entities.ProdukKategori", b =>
                {
                    b.Property<int>("IdProdukKategori")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_produk_kategori");

                    b.Property<int>("IdKategori")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_kategori");

                    b.Property<int>("IdProduk")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_produk");

                    b.HasKey("IdProdukKategori")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdKategori" }, "id_kategori");

                    b.HasIndex(new[] { "IdProduk" }, "id_produk")
                        .HasDatabaseName("id_produk1");

                    b.ToTable("produk_kategori", (string)null);
                });

            modelBuilder.Entity("marketplace.Datas.Entities.StatusOrder", b =>
                {
                    b.Property<int>("IdStatusOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_status_order");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("deskripsi");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nama");

                    b.HasKey("IdStatusOrder")
                        .HasName("PRIMARY");

                    b.ToTable("status_order", (string)null);
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Keranjang", b =>
                {
                    b.HasOne("marketplace.Datas.Entities.Pembeli", "IdPembeliNavigation")
                        .WithMany("Keranjangs")
                        .HasForeignKey("IdPembeli")
                        .IsRequired()
                        .HasConstraintName("keranjang_ibfk_2");

                    b.HasOne("marketplace.Datas.Entities.Produk", "IdProdukNavigation")
                        .WithMany("Keranjangs")
                        .HasForeignKey("IdProduk")
                        .IsRequired()
                        .HasConstraintName("keranjang_ibfk_1");

                    b.Navigation("IdPembeliNavigation");

                    b.Navigation("IdProdukNavigation");
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Order", b =>
                {
                    b.HasOne("marketplace.Datas.Entities.Alamat", "IdAlamatNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdAlamat")
                        .IsRequired()
                        .HasConstraintName("order_ibfk_3");

                    b.HasOne("marketplace.Datas.Entities.Keranjang", "IdKeranjangNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdKeranjang")
                        .IsRequired()
                        .HasConstraintName("order_ibfk_1");

                    b.HasOne("marketplace.Datas.Entities.Pembeli", "IdPembeliNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdPembeli")
                        .IsRequired()
                        .HasConstraintName("order_ibfk_2");

                    b.HasOne("marketplace.Datas.Entities.StatusOrder", "IdStatusOrderNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdStatusOrder")
                        .IsRequired()
                        .HasConstraintName("order_ibfk_4");

                    b.Navigation("IdAlamatNavigation");

                    b.Navigation("IdKeranjangNavigation");

                    b.Navigation("IdPembeliNavigation");

                    b.Navigation("IdStatusOrderNavigation");
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Pembayaran", b =>
                {
                    b.HasOne("marketplace.Datas.Entities.Order", "IdOrderNavigation")
                        .WithMany("Pembayarans")
                        .HasForeignKey("IdOrder")
                        .IsRequired()
                        .HasConstraintName("pembayaran_ibfk_2");

                    b.HasOne("marketplace.Datas.Entities.Pembeli", "IdPembeliNavigation")
                        .WithMany("Pembayarans")
                        .HasForeignKey("IdPembeli")
                        .IsRequired()
                        .HasConstraintName("pembayaran_ibfk_1");

                    b.Navigation("IdOrderNavigation");

                    b.Navigation("IdPembeliNavigation");
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Pengiriman", b =>
                {
                    b.HasOne("marketplace.Datas.Entities.Alamat", "IdAlamatNavigation")
                        .WithMany("Pengirimen")
                        .HasForeignKey("IdAlamat")
                        .IsRequired()
                        .HasConstraintName("pengiriman_ibfk_2");

                    b.HasOne("marketplace.Datas.Entities.Order", "IdOrderNavigation")
                        .WithMany("Pengirimen")
                        .HasForeignKey("IdOrder")
                        .IsRequired()
                        .HasConstraintName("pengiriman_ibfk_1");

                    b.Navigation("IdAlamatNavigation");

                    b.Navigation("IdOrderNavigation");
                });

            modelBuilder.Entity("marketplace.Datas.Entities.ProdukKategori", b =>
                {
                    b.HasOne("marketplace.Datas.Entities.Kategori", "IdKategoriNavigation")
                        .WithMany("ProdukKategoris")
                        .HasForeignKey("IdKategori")
                        .IsRequired()
                        .HasConstraintName("produk_kategori_ibfk_2");

                    b.HasOne("marketplace.Datas.Entities.Produk", "IdProdukNavigation")
                        .WithMany("ProdukKategoris")
                        .HasForeignKey("IdProduk")
                        .IsRequired()
                        .HasConstraintName("produk_kategori_ibfk_1");

                    b.Navigation("IdKategoriNavigation");

                    b.Navigation("IdProdukNavigation");
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Alamat", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Pengirimen");
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Kategori", b =>
                {
                    b.Navigation("ProdukKategoris");
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Keranjang", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Order", b =>
                {
                    b.Navigation("Pembayarans");

                    b.Navigation("Pengirimen");
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Pembeli", b =>
                {
                    b.Navigation("Keranjangs");

                    b.Navigation("Orders");

                    b.Navigation("Pembayarans");
                });

            modelBuilder.Entity("marketplace.Datas.Entities.Produk", b =>
                {
                    b.Navigation("Keranjangs");

                    b.Navigation("ProdukKategoris");
                });

            modelBuilder.Entity("marketplace.Datas.Entities.StatusOrder", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
